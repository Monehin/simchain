{
  "address": "DMaWHy1YmFNNKhyMWaTGpY76hKPdAhu4ExMHTGHU2j8r",
  "metadata": {
    "name": "simchain_wallet",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "add_mint",
      "docs": [
        "Add a new approved mint (admin only)",
        "",
        "# Arguments",
        "* `new_mint` - Public key of the mint to approve"
      ],
      "discriminator": [
        171,
        222,
        111,
        37,
        60,
        166,
        208,
        108
      ],
      "accounts": [
        {
          "name": "admin",
          "writable": true,
          "signer": true,
          "relations": [
            "registry"
          ]
        },
        {
          "name": "registry",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  105,
                  110,
                  116,
                  95,
                  114,
                  101,
                  103,
                  105,
                  115,
                  116,
                  114,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "new_mint",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "check_balance",
      "docs": [
        "Check wallet balance (read-only instruction)"
      ],
      "discriminator": [
        73,
        83,
        254,
        62,
        189,
        158,
        241,
        42
      ],
      "accounts": [
        {
          "name": "wallet"
        }
      ],
      "args": []
    },
    {
      "name": "close_alias_index",
      "docs": [
        "Close alias index PDA and reclaim rent",
        "This should be called after closing a wallet to free up the alias"
      ],
      "discriminator": [
        37,
        74,
        146,
        114,
        28,
        202,
        182,
        171
      ],
      "accounts": [
        {
          "name": "alias_index",
          "writable": true
        },
        {
          "name": "destination",
          "writable": true
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "alias",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "close_registry",
      "docs": [
        "Close the mint registry and reclaim rent (admin only)"
      ],
      "discriminator": [
        76,
        32,
        154,
        180,
        51,
        159,
        218,
        102
      ],
      "accounts": [
        {
          "name": "registry",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  105,
                  110,
                  116,
                  95,
                  114,
                  101,
                  103,
                  105,
                  115,
                  116,
                  114,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "admin",
          "signer": true,
          "relations": [
            "registry"
          ]
        },
        {
          "name": "destination",
          "writable": true
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "close_wallet",
      "docs": [
        "Close wallet and reclaim rent"
      ],
      "discriminator": [
        35,
        212,
        234,
        224,
        244,
        208,
        31,
        204
      ],
      "accounts": [
        {
          "name": "wallet",
          "writable": true
        },
        {
          "name": "owner",
          "signer": true,
          "relations": [
            "wallet"
          ]
        },
        {
          "name": "registry",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  105,
                  110,
                  116,
                  95,
                  114,
                  101,
                  103,
                  105,
                  115,
                  116,
                  114,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "destination",
          "writable": true
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "create_sim_mint",
      "docs": [
        "Create the SIM native SPL mint and whitelist it",
        "",
        "# Arguments",
        "* `_decimals` - Number of decimal places for the mint"
      ],
      "discriminator": [
        203,
        35,
        96,
        97,
        220,
        164,
        152,
        221
      ],
      "accounts": [
        {
          "name": "admin",
          "writable": true,
          "signer": true,
          "relations": [
            "registry"
          ]
        },
        {
          "name": "sim_mint",
          "writable": true,
          "signer": true
        },
        {
          "name": "registry",
          "docs": [
            "NOW REQUIRES registry already exists"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  105,
                  110,
                  116,
                  95,
                  114,
                  101,
                  103,
                  105,
                  115,
                  116,
                  114,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "_decimals",
          "type": "u8"
        }
      ]
    },
    {
      "name": "deposit_native",
      "docs": [
        "Deposit native SOL into a wallet",
        "",
        "# Arguments",
        "* `amount` - Amount of SOL to deposit (in lamports)",
        "",
        "Uses a CPI to the System Program because only the System Program can debit user wallets. Direct lamports mutation is not allowed for accounts not owned by this program."
      ],
      "discriminator": [
        13,
        158,
        13,
        223,
        95,
        213,
        28,
        6
      ],
      "accounts": [
        {
          "name": "wallet",
          "writable": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "health_check",
      "docs": [
        "Health check for monitoring wallet count"
      ],
      "discriminator": [
        115,
        90,
        99,
        168,
        138,
        18,
        157,
        131
      ],
      "accounts": [
        {
          "name": "registry",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  105,
                  110,
                  116,
                  95,
                  114,
                  101,
                  103,
                  105,
                  115,
                  116,
                  114,
                  121
                ]
              }
            ]
          }
        }
      ],
      "args": []
    },
    {
      "name": "initialize_config",
      "docs": [
        "Initialize the global configuration with salt for wallet derivation",
        "",
        "# Arguments",
        "* `salt` - Cryptographic salt for wallet PDA derivation (max 32 bytes)"
      ],
      "discriminator": [
        208,
        127,
        21,
        1,
        194,
        190,
        196,
        70
      ],
      "accounts": [
        {
          "name": "config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "admin",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "salt",
          "type": "bytes"
        }
      ]
    },
    {
      "name": "initialize_registry",
      "docs": [
        "Initialize the global mint registry"
      ],
      "discriminator": [
        189,
        181,
        20,
        17,
        174,
        57,
        249,
        59
      ],
      "accounts": [
        {
          "name": "registry",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  105,
                  110,
                  116,
                  95,
                  114,
                  101,
                  103,
                  105,
                  115,
                  116,
                  114,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "admin",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "initialize_wallet",
      "docs": [
        "Initialize a new wallet for a SIM number",
        "",
        "# Arguments",
        "* `sim` - SIM number string",
        "* `pin_hash` - Hashed PIN (32 bytes)"
      ],
      "discriminator": [
        213,
        0,
        239,
        240,
        73,
        100,
        188,
        193
      ],
      "accounts": [
        {
          "name": "wallet",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "config",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "registry",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  105,
                  110,
                  116,
                  95,
                  114,
                  101,
                  103,
                  105,
                  115,
                  116,
                  114,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "sim",
          "type": "string"
        },
        {
          "name": "pin_hash",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "rotate_salt",
      "docs": [
        "Rotate the salt for enhanced security",
        "",
        "# Arguments",
        "* `new_salt` - New cryptographic salt (max 32 bytes)"
      ],
      "discriminator": [
        213,
        55,
        72,
        38,
        59,
        79,
        169,
        98
      ],
      "accounts": [
        {
          "name": "config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  99,
                  111,
                  110,
                  102,
                  105,
                  103
                ]
              }
            ]
          }
        },
        {
          "name": "admin",
          "signer": true,
          "relations": [
            "config"
          ]
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "new_salt",
          "type": "bytes"
        }
      ]
    },
    {
      "name": "send_native",
      "docs": [
        "Send native SOL between wallets",
        "",
        "# Arguments",
        "* `amount` - Amount of SOL to send (in lamports)",
        "",
        "Uses direct lamports mutation because both wallets are PDAs owned by this program."
      ],
      "discriminator": [
        85,
        55,
        34,
        204,
        253,
        10,
        199,
        182
      ],
      "accounts": [
        {
          "name": "sender_wallet",
          "writable": true
        },
        {
          "name": "receiver_wallet",
          "writable": true
        },
        {
          "name": "owner",
          "signer": true,
          "relations": [
            "sender_wallet"
          ]
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "set_alias",
      "docs": [
        "Set an alias for a wallet (scalable O(1) uniqueness checking)",
        "",
        "# Arguments",
        "* `alias` - 32-byte alias to set for the wallet",
        "",
        "Uses dedicated alias index PDAs for O(1) collision detection instead of scanning accounts.",
        "This approach scales to any number of wallets without hitting account size limits.",
        "Guaranteed uniqueness: PDA collision prevents duplicate aliases."
      ],
      "discriminator": [
        10,
        230,
        117,
        36,
        20,
        115,
        197,
        55
      ],
      "accounts": [
        {
          "name": "wallet",
          "writable": true
        },
        {
          "name": "owner",
          "writable": true,
          "signer": true,
          "relations": [
            "wallet"
          ]
        },
        {
          "name": "alias_index",
          "docs": [
            "Alias index PDA for O(1) uniqueness checking",
            "This will fail if an AliasIndex already exists for that alias (guaranteed uniqueness)"
          ],
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "alias",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "transfer_admin",
      "docs": [
        "Transfer admin control to a new admin",
        "",
        "# Arguments",
        "* `new_admin` - Public key of the new admin"
      ],
      "discriminator": [
        42,
        242,
        66,
        106,
        228,
        10,
        111,
        156
      ],
      "accounts": [
        {
          "name": "registry",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  105,
                  110,
                  116,
                  95,
                  114,
                  101,
                  103,
                  105,
                  115,
                  116,
                  114,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "admin",
          "signer": true,
          "relations": [
            "registry"
          ]
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "new_admin",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "transfer_token",
      "docs": [
        "Transfer SPL tokens between wallets",
        "",
        "# Arguments",
        "* `amount` - Amount of tokens to transfer"
      ],
      "discriminator": [
        219,
        17,
        122,
        53,
        237,
        171,
        232,
        222
      ],
      "accounts": [
        {
          "name": "sender_wallet",
          "writable": true
        },
        {
          "name": "receiver_wallet",
          "writable": true
        },
        {
          "name": "sender_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "sender_wallet"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "account",
                "path": "mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "receiver_ata",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "receiver_wallet"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "account",
                "path": "mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "mint"
        },
        {
          "name": "registry",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  105,
                  110,
                  116,
                  95,
                  114,
                  101,
                  103,
                  105,
                  115,
                  116,
                  114,
                  121
                ]
              }
            ]
          }
        },
        {
          "name": "owner",
          "signer": true,
          "relations": [
            "sender_wallet"
          ]
        },
        {
          "name": "relayer",
          "writable": true,
          "signer": true
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "validate_pin",
      "docs": [
        "Validate PIN against stored hash",
        "",
        "# Arguments",
        "* `pin_hash` - Hash of the PIN to validate"
      ],
      "discriminator": [
        158,
        221,
        44,
        209,
        137,
        167,
        19,
        147
      ],
      "accounts": [
        {
          "name": "wallet"
        }
      ],
      "args": [
        {
          "name": "pin_hash",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "withdraw_native",
      "docs": [
        "Withdraw native SOL from a wallet",
        "",
        "# Arguments",
        "* `amount` - Amount of SOL to withdraw (in lamports)",
        "",
        "Uses direct lamports mutation because the wallet PDA is owned by this program."
      ],
      "discriminator": [
        113,
        227,
        26,
        32,
        53,
        66,
        90,
        250
      ],
      "accounts": [
        {
          "name": "wallet",
          "writable": true
        },
        {
          "name": "owner",
          "signer": true,
          "relations": [
            "wallet"
          ]
        },
        {
          "name": "to",
          "writable": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "instructions",
          "address": "Sysvar1nstructions1111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "AliasIndex",
      "discriminator": [
        122,
        40,
        47,
        157,
        153,
        82,
        76,
        31
      ]
    },
    {
      "name": "Config",
      "discriminator": [
        155,
        12,
        170,
        224,
        30,
        250,
        204,
        130
      ]
    },
    {
      "name": "MintRegistry",
      "discriminator": [
        253,
        5,
        199,
        161,
        2,
        189,
        45,
        165
      ]
    },
    {
      "name": "Wallet",
      "discriminator": [
        24,
        89,
        59,
        139,
        81,
        154,
        232,
        95
      ]
    }
  ],
  "events": [
    {
      "name": "AdminTransferred",
      "discriminator": [
        255,
        147,
        182,
        5,
        199,
        217,
        38,
        179
      ]
    },
    {
      "name": "AliasCleared",
      "discriminator": [
        175,
        53,
        185,
        75,
        34,
        95,
        38,
        71
      ]
    },
    {
      "name": "AliasSet",
      "discriminator": [
        182,
        66,
        14,
        219,
        233,
        220,
        149,
        180
      ]
    },
    {
      "name": "HealthCheckEvent",
      "discriminator": [
        210,
        138,
        51,
        240,
        62,
        95,
        100,
        96
      ]
    },
    {
      "name": "MintAdded",
      "discriminator": [
        15,
        37,
        223,
        254,
        230,
        151,
        165,
        171
      ]
    },
    {
      "name": "NativeTransfer",
      "discriminator": [
        200,
        118,
        132,
        83,
        101,
        248,
        123,
        2
      ]
    },
    {
      "name": "RegistryInitialized",
      "discriminator": [
        144,
        138,
        62,
        105,
        58,
        38,
        100,
        177
      ]
    },
    {
      "name": "SaltRotated",
      "discriminator": [
        15,
        232,
        34,
        127,
        153,
        97,
        137,
        252
      ]
    },
    {
      "name": "TokenTransfer",
      "discriminator": [
        84,
        202,
        76,
        50,
        9,
        100,
        246,
        241
      ]
    },
    {
      "name": "WalletClosed",
      "discriminator": [
        163,
        73,
        132,
        31,
        180,
        152,
        98,
        48
      ]
    },
    {
      "name": "WalletInitialized",
      "discriminator": [
        6,
        2,
        95,
        235,
        116,
        238,
        156,
        98
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidAmount",
      "msg": "Invalid amount"
    },
    {
      "code": 6001,
      "name": "InsufficientBalance",
      "msg": "Insufficient balance"
    },
    {
      "code": 6002,
      "name": "Unauthorized",
      "msg": "Unauthorized"
    },
    {
      "code": 6003,
      "name": "WeakPin",
      "msg": "Weak PIN"
    },
    {
      "code": 6004,
      "name": "CpiNotAllowed",
      "msg": "CPI not allowed"
    },
    {
      "code": 6005,
      "name": "MintNotApproved",
      "msg": "Mint not approved in registry"
    },
    {
      "code": 6006,
      "name": "InvalidAlias",
      "msg": "Invalid alias"
    },
    {
      "code": 6007,
      "name": "AliasAlreadyExists",
      "msg": "Alias already exists"
    },
    {
      "code": 6008,
      "name": "InvalidSaltLength",
      "msg": "Invalid salt length"
    },
    {
      "code": 6009,
      "name": "WalletCountOverflow",
      "msg": "Wallet count overflow"
    },
    {
      "code": 6010,
      "name": "WalletCountUnderflow",
      "msg": "Wallet count underflow"
    },
    {
      "code": 6011,
      "name": "MintAlreadyApproved",
      "msg": "Mint already approved"
    }
  ],
  "types": [
    {
      "name": "AdminTransferred",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "old_admin",
            "type": "pubkey"
          },
          {
            "name": "new_admin",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "AliasCleared",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "wallet",
            "type": "pubkey"
          },
          {
            "name": "alias",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "AliasIndex",
      "docs": [
        "Alias index account for scalable alias uniqueness checking",
        "Maps alias → wallet for O(1) alias collision detection"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "wallet",
            "docs": [
              "The wallet PDA that this alias points to"
            ],
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "AliasSet",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "wallet",
            "type": "pubkey"
          },
          {
            "name": "alias",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "Config",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "admin",
            "type": "pubkey"
          },
          {
            "name": "salt",
            "type": "bytes"
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "HealthCheckEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "wallet_count",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "MintAdded",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "mint",
            "type": "pubkey"
          },
          {
            "name": "admin",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "MintRegistry",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "admin",
            "type": "pubkey"
          },
          {
            "name": "approved",
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "wallet_count",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "NativeTransfer",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "from",
            "type": "pubkey"
          },
          {
            "name": "to",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "transfer_type",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "RegistryInitialized",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "admin",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "SaltRotated",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "admin",
            "type": "pubkey"
          },
          {
            "name": "new_salt_hash",
            "docs": [
              "SHA256(salt) so clients can update without embedding the full secret",
              "This prevents event bloat and keeps the raw salt private"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "TokenTransfer",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "from_wallet",
            "type": "pubkey"
          },
          {
            "name": "to_wallet",
            "type": "pubkey"
          },
          {
            "name": "mint",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "Wallet",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "sim_hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "pin_hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "alias",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "WalletClosed",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "wallet",
            "type": "pubkey"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "rent_reclaimed",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "WalletInitialized",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "wallet",
            "type": "pubkey"
          },
          {
            "name": "owner",
            "type": "pubkey"
          }
        ]
      }
    }
  ]
}